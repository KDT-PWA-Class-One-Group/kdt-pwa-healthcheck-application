# 메인 서버
server {
    listen 80 default_server;
    server_name localhost;

    # 기본 로그 설정
    access_log /var/log/nginx/access.log json_combined;
    error_log /var/log/nginx/error.log;

    # 모니터링 API를 먼저 처리
    location /api/monitor {
        proxy_pass http://healthcheck-monitor:3001/api/monitor;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 10s;

        # CORS 설정
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
        add_header Access-Control-Expose-Headers 'Content-Length,Content-Range' always;

        # OPTIONS 요청 처리
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain charset=UTF-8';
            add_header Content-Length 0;
            return 204;
        }
    }

    # 일반 API 요청 처리
    location /api/ {
        proxy_pass http://healthcheck-api:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Socket.IO 경로
    location /socket.io/ {
        proxy_pass http://healthcheck-monitor:3001/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # ESM 관련 헤더 추가
        add_header Content-Type application/javascript;
    }

    # 클라이언트 헬스체크 엔드포인트
    location = /api/health {
        proxy_pass http://healthcheck-client:3000/api/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 디버깅을 위한 로깅 활성화
        access_log /var/log/nginx/health-check-access.log json_combined;
        error_log /var/log/nginx/health-check-error.log debug;
    }

    # 모니터링 서비스
    location /monitor {
        proxy_pass http://healthcheck-monitor:3001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 정적 파일 서빙을 위한 설정 추가
    location /monitor/static/ {
        proxy_pass http://healthcheck-monitor:3001/static/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # ESM 관련 헤더 추가
        add_header Content-Type application/javascript;
    }

    # 클라이언트 애플리케이션
    location / {
        proxy_pass http://healthcheck-client:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 헬스체크 엔드포인트
    location /health {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"healthy"}';
    }
}
