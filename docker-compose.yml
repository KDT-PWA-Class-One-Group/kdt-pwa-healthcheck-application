services:
  proxy:
    build: ./proxy
    container_name: healthcheck-proxy
    ports:
      - "80:80"
    networks:
      - frontend
      - backend
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy/conf.d:/etc/nginx/conf.d
      - ./proxy/logs:/var/log/nginx
    healthcheck:
      test: ["CMD-SHELL", "nginx -t || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  db:
    image: postgres:14.6
    platform: ${TARGETPLATFORM:-linux/amd64}
    container_name: healthcheck-db
    environment:
      POSTGRES_DB: healthcheck
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/logs:/var/log/postgresql
    networks:
      - backend
    depends_on:
      proxy:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

  api:
    build: ./api
    platform: ${TARGETPLATFORM:-linux/amd64}
    container_name: healthcheck-api
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/healthcheck
    networks:
      - backend
    depends_on:
      proxy:
        condition: service_healthy
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    platform: ${TARGETPLATFORM:-linux/amd64}
    container_name: healthcheck-client
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=/api
      - PORT=3000
      - HOSTNAME=0.0.0.0
    expose:
      - "3000"
    networks:
      - frontend
    depends_on:
      proxy:
        condition: service_healthy
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    restart: unless-stopped

networks:
  frontend:
    name: healthcheck-frontend
    internal: false
  backend:
    name: healthcheck-backend
    internal: true

volumes:
  db_data:
    name: healthcheck-db-data
  logs:
    name: healthcheck-logs
